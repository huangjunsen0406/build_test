name: Build Windows Package with UnifyPy

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python版本'
        required: false
        default: '3.10'
        type: choice
        options:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**/*.md'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**/*.md'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout build_test
        uses: actions/checkout@v4
        with:
          repository: huangjunsen0406/build_test
          path: build_test
        
      - name: Checkout UnifyPy
        uses: actions/checkout@v4
        with:
          repository: huangjunsen0406/UnifyPy
          path: UnifyPy
          
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ github.event.inputs.python_version || '3.10' }}
          activate-environment: py-xiaozhi
          
      - name: Install FFmpeg
        shell: powershell
        run: |
          # 下载FFmpeg
          Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"
          
          # 解压FFmpeg
          Expand-Archive -Path "ffmpeg.zip" -DestinationPath "C:\ffmpeg"
          
          # 将FFmpeg添加到PATH
          echo "C:\ffmpeg\ffmpeg-master-latest-win64-gpl\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Install Conda Dependencies
        shell: bash -el {0}
        run: |
          conda install -y pyqt=5.15.10 opencv=4.10.0 -c conda-forge
          
      - name: Install build_test dependencies
        shell: bash -el {0}
        run: |
          cd build_test
          pip install -r requirements.txt
          pip install wmi
          
      - name: Install PyInstaller
        shell: bash -el {0}
        run: |
          pip install pyinstaller>=6.1.0
          
      - name: Install Inno Setup
        shell: powershell
        run: |
          # 下载Inno Setup安装程序
          Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.1.exe" -OutFile "innosetup-6.2.1.exe"
          
          # 使用静默安装模式安装Inno Setup
          Start-Process -FilePath "innosetup-6.2.1.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES" -Wait
          
          # 设置环境变量
          echo "INNO_SETUP_PATH=C:\Program Files (x86)\Inno Setup 6\ISCC.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          
      - name: Create output directories
        shell: bash -el {0}
        run: |
          cd build_test
          mkdir -p dist
          mkdir -p installer
          
      - name: Run UnifyPy
        shell: bash -el {0}
        run: |
          cd build_test
          python ../UnifyPy/main.py . --config build.json
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-test-package
          path: |
            build_test/dist/**/*.exe
            build_test/installer/**/*.exe